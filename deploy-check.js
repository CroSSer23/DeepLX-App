#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é –Ω–∞ Vercel
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
 * 
 * @author crosser.software
 */

const fs = require('fs');
const path = require('path');

const requiredFiles = [
  'package.json',
  'vercel.json',
  'index.html',
  'script.js',
  'styles.css',
  'api/translate.js'
];

const requiredPackages = [
  // –ù–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π - –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π fetch
];

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é –Ω–∞ Vercel...\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
console.log('üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤:');
let filesOk = true;

requiredFiles.forEach(file => {
  if (fs.existsSync(file)) {
    console.log(`‚úÖ ${file}`);
  } else {
    console.log(`‚ùå ${file} - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
    filesOk = false;
  }
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json
console.log('\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ package.json:');
let packageOk = true;

try {
  const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
  
  if (requiredPackages.length > 0) {
    if (packageJson.dependencies) {
      requiredPackages.forEach(pkg => {
        if (packageJson.dependencies[pkg]) {
          console.log(`‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å: ${pkg}`);
        } else {
          console.log(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å: ${pkg}`);
          packageOk = false;
        }
      });
    } else {
      console.log('‚ùå –°–µ–∫—Ü–∏—è dependencies –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      packageOk = false;
    }
  } else {
    console.log('‚úÖ –ù–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π - –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏');
  }

  if (packageJson.scripts && packageJson.scripts.build) {
    console.log('‚úÖ –°–∫—Ä–∏–ø—Ç build –Ω–∞–π–¥–µ–Ω');
  } else {
    console.log('‚ö†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å —Å–∫—Ä–∏–ø—Ç "build"');
  }

} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è package.json:', error.message);
  packageOk = false;
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º vercel.json
console.log('\n‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ vercel.json:');
let vercelOk = true;

try {
  const vercelJson = JSON.parse(fs.readFileSync('vercel.json', 'utf8'));
  
  if (vercelJson.functions) {
    console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è functions –Ω–∞–π–¥–µ–Ω–∞');
    
    if (vercelJson.functions['api/translate.js'] && vercelJson.functions['api/translate.js'].runtime) {
      console.log('‚úÖ Runtime Node.js —É–∫–∞–∑–∞–Ω');
    } else {
      console.log('‚ö†Ô∏è Runtime –Ω–µ —É–∫–∞–∑–∞–Ω, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
    }
  } else {
    console.log('‚ö†Ô∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è functions –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }

  if (vercelJson.headers) {
    console.log('‚úÖ CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  } else {
    console.log('‚ö†Ô∏è CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  }

} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è vercel.json:', error.message);
  vercelOk = false;
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º API —Ñ—É–Ω–∫—Ü–∏—é
console.log('\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ API —Ñ—É–Ω–∫—Ü–∏–∏:');
let apiOk = true;

try {
  const apiContent = fs.readFileSync('api/translate.js', 'utf8');
  
  if (apiContent.includes('export default')) {
    console.log('‚úÖ –§—É–Ω–∫—Ü–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
  } else {
    console.log('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç export default –≤ API —Ñ—É–Ω–∫—Ü–∏–∏');
    apiOk = false;
  }

  if (apiContent.includes('Access-Control-Allow-Origin')) {
    console.log('‚úÖ CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤ API —Ñ—É–Ω–∫—Ü–∏–∏');
  } else {
    console.log('‚ö†Ô∏è CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ API —Ñ—É–Ω–∫—Ü–∏–∏');
  }

} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è api/translate.js:', error.message);
  apiOk = false;
}

// –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
console.log('\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏:');

if (filesOk && packageOk && vercelOk && apiOk) {
  console.log('üéâ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é –Ω–∞ Vercel!');
  console.log('\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ https://vercel.com');
  console.log('2. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –≤–∞—à GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π');
  console.log('3. Vercel –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–∑–≤–µ—Ä–Ω–µ—Ç –ø—Ä–æ–µ–∫—Ç');
  process.exit(0);
} else {
  console.log('‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø–µ—Ä–µ–¥ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º');
  process.exit(1);
}
